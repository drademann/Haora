name: Release

on:
  push:

    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [ 1.23 ]
        os: [ ubuntu-amd64, windows-amd64, macos-arm64 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Test
        run: |
          if [[ "${{ matrix.os }}" == "windows-amd64" ]]; then
            GOOS=windows GOARCH=amd64 go test ./...
          elif [[ "${{ matrix.os }}" == "macos-arm64" ]]; then
            GOOS=darwin GOARCH=arm64 go test ./...
          else
            GOOS=linux GOARCH=amd64 go test ./...
          fi

      - name: Build
        run: |
          if [[ "${{ matrix.os }}" == "windows-amd64" ]]; then
            GOOS=windows GOARCH=amd64 go build -o haora.exe
          elif [[ "${{ matrix.os }}" == "macos-arm64" ]]; then
            GOOS=darwin GOARCH=arm64 go build -o haora
          else
            GOOS=linux GOARCH=amd64 go build -o haora
          fi

      - name: Archive release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-haora
          path: haora*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.HAORA_RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Linux amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.HAORA_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ubuntu-amd64-haora
          asset_name: haora
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.HAORA_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/windows-amd64-haora.exe
          asset_name: haora.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (macOS arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.HAORA_RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/macos-arm64-haora
          asset_name: haora
          asset_content_type: application/octet-stream
